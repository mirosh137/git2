---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      initContainers:
        - name: check-db-ready
          image: mysql:8.0
          command: ['sh', '-c', 'until mysqladmin ping -h mysql-service --silent; do sleep 2; done']
      containers:
        - name: flask-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_ENV
              value: "development"
            - name: DATABASE_HOST
              value: "{{ .Values.mysql.serviceName }}"
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: database-user
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: database-password
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: database-name
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  name: flaskapp-service
spec:
  type: LoadBalancer  # Works with GKE, change to clusteIP if using ingress
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
