name: Flask App CI/CD Pipeline

on:
  schedule:
    - cron: "*/2 * * * *"  # Run every 2 minutes
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker Image
      run: |
        docker build -t mirosh137/flaskapp:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker Image to Docker Hub
      run: |
        docker tag mirosh137/flaskapp:latest mirosh137/flaskapp:1.0
        docker push mirosh137/flaskapp:1.0
        docker push mirosh137/flaskapp:latest

    - name: Copy Docker Compose file to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "docker-compose.yml"
        target: "~/flaskapp/"

    - name: Deploy to EC2 with Docker Compose
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/flaskapp  # Navigate to the app directory
          
          # Stop and remove existing containers
          docker-compose down || true

          # Pull the latest Docker image
          docker pull mirosh137/flaskapp:latest

          # Start the application using Docker Compose
          docker-compose up -d --force-recreate --remove-orphans

          # Cleanup old Docker images
          docker image prune -af
